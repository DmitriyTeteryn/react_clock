{"version":3,"sources":["component/clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","setState","console","log","toLocaleTimeString","clearInterval","clear","clockName","props","className","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","handlerClock","event","type","handlerSetInterval","setTimer","document","addEventListener","_","prevState","prevName","currentName","ReactDOM","render","getElementById"],"mappings":"qMAUaA,EAAb,4MACEC,MAAyB,CACvBC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAG1BM,QAAQC,IAAI,EAAKT,MAAMC,KAAKS,wBAC3B,OAbP,kCAgBE,WACEC,cAAcP,KAAKD,SAEnBK,QAAQI,UAnBZ,oBAsBE,WACE,IAAQX,EAASG,KAAKJ,MAAdC,KACAY,EAAcT,KAAKU,MAAnBD,UAER,OACE,sBAAKE,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAGF,YAED,sBAAME,UAAU,cAAhB,SACGd,EAAKS,8BAnChB,GAA2BM,a,MCL3B,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAQX,IAAMK,EAAb,4MACEvB,MAAyB,CACvBwB,UAAU,EACVX,UAAWI,KAHf,EAMEd,QAAU,EANZ,EA+BEsB,aAAe,SAACC,GACK,gBAAfA,EAAMC,MAER,EAAKpB,SAAS,CAAEiB,UAAU,IAGT,UAAfE,EAAMC,MACR,EAAKpB,SAAS,CAAEiB,UAAU,KAtChC,EA0CEI,mBAAqB,WACnB,EAAKrB,SAAS,CAAEM,UAAWI,OA3C/B,EA8CEY,SAAWxB,OAAOC,YAAY,EAAKsB,mBAAoB,MA9CzD,uDAQE,WACExB,KAAKD,QAAUC,KAAKyB,SACpBC,SAASC,iBAAiB,QAAS3B,KAAKqB,cACxCK,SAASC,iBAAiB,cAAe3B,KAAKqB,eAElB,IAAxBrB,KAAKJ,MAAMwB,UACbhB,QAAQI,UAdd,gCAkBE,SAAmBoB,EAAiBC,GAClC,IAAMC,EAAWD,EAAUpB,UACrBsB,EAAc/B,KAAKJ,MAAMa,UAE3BqB,IAAaC,GACf3B,QAAQC,IAAR,wBAA6ByB,EAA7B,iBAA8CC,EAA9C,QAvBN,kCA2BE,WACExB,cAAcP,KAAKD,WA5BvB,oBAgDE,WACE,MAAgCC,KAAKJ,MAA7BwB,EAAR,EAAQA,SAAUX,EAAlB,EAAkBA,UAElB,OACE,sBAAKE,UAAU,MAAf,UACE,6CAECS,GAAa,cAAC,EAAD,CAAOX,UAAWA,WAvDxC,GAAyBG,aCbzBoB,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.1b38461c.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  date: Date;\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n\n      // eslint-disable-next-line\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n\n    console.clear(); // eslint-disable-line\n  }\n\n  render() {\n    const { date } = this.state;\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './component/clock';\n\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: getRandomName(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = this.setTimer;\n    document.addEventListener('click', this.handlerClock);\n    document.addEventListener('contextmenu', this.handlerClock);\n\n    if (this.state.hasClock === false) {\n      console.clear() // eslint-disable-line\n    }\n  }\n\n  componentDidUpdate(_: Readonly<{}>, prevState: Readonly<State>) {\n    const prevName = prevState.clockName;\n    const currentName = this.state.clockName;\n\n    if (prevName !== currentName) {\n      console.log(`Renamed from <${prevName}> to <${currentName}>`); // eslint-disable-line\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  handlerClock = (event: MouseEvent) => {\n    if (event.type === 'contextmenu') {\n      // event.preventDefault();\n      this.setState({ hasClock: false });\n    }\n\n    if (event.type === 'click') {\n      this.setState({ hasClock: true });\n    }\n  };\n\n  handlerSetInterval = () => {\n    this.setState({ clockName: getRandomName() });\n  };\n\n  setTimer = window.setInterval(this.handlerSetInterval, 3300);\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (<Clock clockName={clockName} />)}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}